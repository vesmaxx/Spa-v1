<!-- <?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<http use-expressions="true">
		<csrf disabled="true" />
		<intercept-url pattern="/login" access="permitAll()" />
		<intercept-url pattern="/405" access="permitAll()" />
		<intercept-url pattern="/register" access="permitAll()" />
		<intercept-url pattern="/register" access="permitAll()" />
		<intercept-url pattern="/staff-List"
			access="hasRole('ROLE_1')" />

		<access-denied-handler
			error-page="/access-denied" />
		<form-login login-page="/login"
			login-processing-url="/login-processing"
			default-target-url="/staff-List" always-use-default-target="false"
			authentication-failure-url="/login-error"
			username-parameter="FieldEmail" password-parameter="FieldPassword" />
		<logout logout-url="/SignOut" logout-success-url="/login"
			delete-cookies="JSESSIONID" invalidate-session="true" />
	</http>
	<authentication-manager>
		authentication from database
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="Select email ,passwords,roles from Users where email=?"
				authorities-by-username-query="Select email, 'ROLE_'+cast(Role as varchar), Role from Users where Username=?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans> -->